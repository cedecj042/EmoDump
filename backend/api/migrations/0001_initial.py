# Generated by Django 5.0.6 on 2024-06-03 19:06

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Emotion',
            fields=[
                ('emotion_id', models.AutoField(db_column='emotion_id', primary_key=True, serialize=False)),
                ('emotion_name', models.CharField(db_column='emotion_name', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'emotion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('profile_image', models.CharField(blank=True, max_length=256, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'api_user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Dump',
            fields=[
                ('dump_id', models.AutoField(db_column='dump_id', primary_key=True, serialize=False)),
                ('dump_timestamp', models.DateTimeField(auto_now_add=True, db_column='dump_timestamp')),
                ('dump_content', models.CharField(db_column='dump_content', max_length=255)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dump',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DumpEmotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.FloatField(blank=True, null=True)),
                ('dump_id', models.ForeignKey(db_column='dump_id', on_delete=django.db.models.deletion.CASCADE, related_name='dump_emotions', to='api.dump')),
                ('emotion_id', models.ForeignKey(db_column='emotion_id', on_delete=django.db.models.deletion.CASCADE, related_name='dump_emotions', to='api.emotion')),
            ],
            options={
                'db_table': 'dumpemotion',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Friendrequests',
            fields=[
                ('request_id', models.AutoField(db_column='request_id', primary_key=True, serialize=False)),
                ('sent_at', models.DateTimeField(blank=True, db_column='sent_at', null=True)),
                ('receiver_id', models.ForeignKey(db_column='receiver_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='received_friend_requests', to=settings.AUTH_USER_MODEL)),
                ('sender_id', models.ForeignKey(db_column='sender_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='sent_friend_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'friendrequests',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('friend_id', models.AutoField(db_column='friend_id', primary_key=True, serialize=False)),
                ('friendship_date', models.DateTimeField(blank=True, db_column='friendship_date', null=True)),
                ('user1_id', models.ForeignKey(db_column='user1_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='friends1', to=settings.AUTH_USER_MODEL)),
                ('user2_id', models.ForeignKey(db_column='user2_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='friends2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'friends',
                'managed': True,
            },
        ),
        migrations.AddConstraint(
            model_name='dumpemotion',
            constraint=models.UniqueConstraint(fields=('dump_id', 'emotion_id'), name='unique_dump_emotion'),
        ),
    ]
